version: '3.8'

services:
  # Prometheus 主服务
  prometheus:
    image: prom/prometheus
    command:
      [
        "--enable-feature=exemplar-storage",
        "--config.file=/etc/prometheus.yaml"
      ]
    restart: always
    volumes:
      - ${PWD}/data/prometheus/:/etc/prometheus/
      - ${PWD}/config/prometheus/prometheus.yaml:/etc/prometheus.yaml
      - ${PWD}/config/prometheus/rule/:/etc/prometheus/rule/
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki
    # hostname: loki
    # network_mode: host
    restart: always
    command: -config.file=/etc/loki/loki.yaml
    ports:
      - 3100:3100
    volumes:
      - ${PWD}/config/loki/loki.yaml:/etc/loki/loki.yaml

  promtail:
    image: grafana/promtail
    # hostname: promtail
    # network_mode: host
    restart: always
    command: -config.expand-env=true -config.file=/etc/promtail/promtail.yaml
    ports:
      - "3101:3101"
    volumes:
      - ${PWD}/config/loki/promtail.yaml:/etc/promtail/promtail.yaml
      - ${PWD}/data/promtail:/promtail
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/beni/Documents/code/project/phanes-o/phanes-layout/logs:/var/log

  tempo:
    image: grafana/tempo
    # hostname: tempo
    # network_mode: host
    restart: always
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ${PWD}/config/tempo/tempo.yml:/etc/tempo.yml
      - ${PWD}/data/tempo/tempo:/tmp/tempo
    ports:
      - "14268:14268" # jaeger ingest
      - "3200:3200" # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "9411:9411" # zipkin

  tempo-query:
    image: grafana/tempo-query
    # hostname: tempo-query
    # network_mode: host
    restart: always
    command:
      [
        "--grpc-storage-plugin.configuration-file=/etc/tempo-query.yaml"
      ]
    volumes:
      - ${PWD}/config/tempo/tempo-query.yaml:/etc/tempo-query.yaml
    ports:
      - "16686:16686" # jaeger-ui

  mimir:
    image: grafana/mimir
    # hostname: mimir
    # network_mode: host
    restart: always
    environment:
      - JAEGER_AGENT_HOST=docker.for.mac.localhost:14268
    command:
      [
        "--auth.multitenancy-enabled=false",
        "--config.file=/etc/mimir.yml"
      ]
    volumes:
      - ${PWD}/config/mimir/mimir.yml:/etc/mimir.yml
    ports:
      - "3300:3300"
      - "9009:9009"

  # AlertManager Prometheus 报警服务
  alertmanager:
    image: prom/alertmanager
    hostname: alertmanager
    restart: always
    volumes:
      - ${PWD}/congif/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"

  # Grafana 监控指标 Dashboard
  grafana:
    image: grafana/grafana
    hostname: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

  # NodeExporter 提供服务器主机数据指标
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global

  # docker 管理 Dashboard
  # portainer:
  #   image: portainer/portainer:alpine
  #   restart: always
  #   ports:
  #     - 8000:8000
  #     - 9000:9000
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ${PWD}/data/portainer/data:/data portainer/portainer-ce

  # otel-collector:
  #   image: otel/opentelemetry-collector-contrib
  #   command: [ --config=/etc/otel-collector-config.yaml ]
  #   volumes:
  #     - ./config/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   ports:
  #     - 1888:1888 # pprof extension
  #     - 8888:8888 # Prometheus metrics exposed by the collector
  #     - 8889:8889 # Prometheus exporter metrics
  #     - 13133:13133 # health_check extension
  #     - 4317:4317 # OTLP gRPC receiver
  #     - 4318:4318 # OTLP http receiver
  #     - 55679:55679 # zpages extension

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./.data/minio:/data
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 15s
      timeout: 20s
      retries: 5
